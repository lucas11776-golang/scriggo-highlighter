{
	"information_for_contributors": [
		"This file has been converted from https://github.com/textmate/html.tmbundle/blob/master/Syntaxes/HTML%20%28Derivative%29.tmLanguage",
		"If you want to provide a fix or improvement, please create a pull request against the original repository.",
		"Once accepted there, we are happy to receive an update request."
	],
	"version": "https://github.com/textmate/html.tmbundle/commit/390c8870273a2ae80244dae6db6ba064a802f407",
	"name": "HTML (Derivative)",
	"scopeName": "text.html.derivative",
	"injections": {
		"R:text.html - (comment.block, text.html meta.embedded, meta.tag.*.*.html, meta.tag.*.*.*.html, meta.tag.*.*.*.*.html)": {
			"comment": "Uses R: to ensure this matches after any other injections.",
			"patterns": [
				{
					"match": "<",
					"name": "invalid.illegal.bad-angle-bracket.html"
				}
			]
		}
	},
	"patterns": [
		{
			"include": "text.html.basic#core-minus-invalid"
		},
		{
			"begin": "(</?)(\\w[^\\s<>]*)(?<!/)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.name.tag.html"
				}
			},
			"end": "((?: ?/)?>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "meta.tag.other.unrecognized.html.derivative",
			"patterns": [
				{
					"include": "text.html.basic#attribute"
				}
			]
		},






		{
			"name": "--------------------------SCRIGGO--------------------------"
		},






		{
			"name": "keyword.control.Sriggo",
			"match": "\\b(if|else|for|and|extends|not|render|contains|in|or|show|end|macro|raw|using)\\b"
		},
		{
			"name": "meta.function.Sriggo",
			"begin": "\\{\\%\\s*(\\w+)\\s+(\\w+)\\s*\\(",
			"beginCaptures": {
				"1": { "name": "keyword.control.functiontype.Sriggo" },
				"2": { "name": "entity.name.function.Sriggo" }
			},
			"end": "\\)\\s*\\%\\}",
			"patterns": [
				{
				"name": "variable.parameter.Sriggo",
				"match": "(\\w+)\\s+(string|int)",
				"captures": {
					"1": { "name": "variable.parameter.name.Sriggo" },
					"2": { "name": "storage.type.Sriggo" }
				}
				}
			]
		},
		{
			"name": "meta.template.block.with-params.Sriggo",
			"begin": "\\{\\%\\s*(\\w+)\\s+(\\w+)\\s*\\(([^)]*)\\)\\s*\\%\\}",
			"beginCaptures": {
				"1": { "name": "keyword.control.templateblock.Sriggo" },
				"2": { "name": "entity.name.function.Sriggo" },
				"3": {
				"name": "meta.function.parameters.Sriggo",
				"patterns": [
					{
					"match": "\\b(\\w+)\\b",
					"name": "variable.parameter.name.Sriggo"
					}
				]
				}
			},
			"end": "\\{\\%\\s*end\\s*\\%\\}",
			"endCaptures": {
				"0": { "name": "keyword.control.templateblock.end.Sriggo" }
			}
		},
		{
			"name": "meta.template.block.no-params.Sriggo",
			"begin": "\\{\\%\\s*(\\w+)\\s+(\\w+)\\s*\\%\\}",
			"beginCaptures": {
				"1": { "name": "keyword.control.templateblock.Sriggo" },
				"2": { "name": "entity.name.function.Sriggo" }
			},
			"end": "\\{\\%\\s*end\\s*\\%\\}",
			"endCaptures": {
				"0": { "name": "keyword.control.templateblock.end.Sriggo" }
			}
		},
		{
			"name": "meta.variable.assignment.Sriggo",
			"match": "\\b(var)\\s+(\\w+)\\s*(=)\\s*(\"[^\"]*\"|'[^']*'|\\d+(?:\\.\\d+)?)",
			"captures": {
			"1": {
				"name": "storage.type.variable.Sriggo"     
			},
			"2": {
				"name": "variable.other.readwrite.Sriggo"    
			},
			"3": {
				"name": "keyword.operator.assignment.Sriggo"
			},
			"4": {
				"name": "constant.numeric.Sriggo" 
			}
			}
		},
		{
			"name": "keyword.control.Sriggo",
			"match": "\\b(if|else)\\b"
		},
		{
			"name": "variable.other.readwrite.Sriggo",
			"match": "\\b[a-zA-Z_]\\w*\\b"
		},
		{
			"name": "keyword.operator.comparison.Sriggo",
			"match": "<|<=|>|>=|==|!="
		},
		{
			"name": "constant.numeric.Sriggo",
			"match": "\\b\\d+(?:\\.\\d+)?\\b"
		},
		{
			"name": "string.quoted.double.Sriggo",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
				"match": "\\\\.",
				"name": "constant.character.escape.Sriggo"
				}
			]
		}
	]
}